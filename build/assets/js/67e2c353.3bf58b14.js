"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8113],{8684:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>d});var r=s(4848),i=s(8453);const t={sidebar_position:6},l="IGH EtherCAT (Linux)",a={id:"eRob driver/IGH EtherCAT",title:"IGH EtherCAT (Linux)",description:"---",source:"@site/docs/eRob driver/IGH EtherCAT.md",sourceDirName:"eRob driver",slug:"/eRob driver/IGH EtherCAT",permalink:"/docs/eRob driver/IGH EtherCAT",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/eRob driver/IGH EtherCAT.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"SOEM (Linux)",permalink:"/docs/eRob driver/SOEM EtherCAT Linux"},next:{title:"CAN driver (Linux)",permalink:"/docs/eRob driver/CAN-Linux"}},c={},d=[{value:"Quickstart",id:"quickstart",level:2},{value:"Installation",id:"installation",level:3},{value:"Prerequisites",id:"prerequisites",level:4},{value:"Installing EtherLab",id:"installing-etherlab",level:4},{value:"Building <code>ethercat_driver_ros2</code>",id:"building-ethercat_driver_ros2",level:3}];function o(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"igh-ethercat-linux",children:"IGH EtherCAT (Linux)"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h1,{id:"ethercat-driver-ros2-stack",children:"EtherCAT Driver ROS2 Stack"}),"\n",(0,r.jsx)(n.p,{children:"EtherCAT provides applications with the capacity of reliable, real-time communication between systems and is therefore a common industrial standard. In order to simplify the development/deployment of new application using EtherCAT modules, this stack allows to combine them with ros2_control. This driver proposes a generic ways to parametrize and assemble Hardware Interfaces based on EtherCAT modules that can be defined using parameter files."}),"\n",(0,r.jsxs)(n.p,{children:["Project GitHub repository: ",(0,r.jsx)(n.a,{href:"https://github.com/ICube-Robotics/ethercat_driver_ros2",children:"ethercat_driver_ros2"})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"quickstart",children:"Quickstart"}),"\n",(0,r.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h4,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsx)(n.p,{children:"Before you begin, make sure you have the following:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Ubuntu 20.04\\22.04\\24.04"})," installed on your system."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h4,{id:"installing-etherlab",children:"Installing EtherLab"}),"\n",(0,r.jsx)(n.p,{children:"The proposed development builds upon the IgH EtherCAT Master. Installation steps are summarized here:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Verify that you can run unsigned kernel modules\nEtherlab is a kernel module that is not signed by default. To allow the kernel to load unsigned modules, you need to disable secure boot."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Verify if secure boot is enabled (you need to install \u2018\u2019mokutil\u2019\u2019 first):"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo apt-get install mokutil\nmokutil --sb-state\n"})}),"\n",(0,r.jsx)(n.p,{children:"it should print:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"SecureBoot disabled\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:"if it prints:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"SecureBoot enabled\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Then you need to disable secure boot. To do so:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"reboot your computer and enter the BIOS settings."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"In the security tab, disable secure boot."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Save and exit."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Install required tools:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo apt-get update\nsudo apt-get upgrade\nsudo apt-get install git autoconf libtool pkg-config make build-essential net-tools\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Setup sources for the EtherCAT Master:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"git clone https://gitlab.com/etherlab.org/ethercat.git\ncd ethercat\ngit checkout stable-1.5\nsudo rm /usr/bin/ethercat\nsudo rm /etc/init.d/ethercat\n./bootstrap  # to create the configure script\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Configure, build and install libs and kernel modules:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"/configure --prefix=/usr/local/etherlab  --disable-8139too --disable-eoe --enable-generic\n\nmake all modules\nsudo make modules_install install\nsudo depmod\n"})}),"\n",(0,r.jsx)(n.p,{children:"Configure system:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"$ sudo ln -s /usr/local/etherlab/bin/ethercat /usr/bin/\n$ sudo ln -s /usr/local/etherlab/etc/init.d/ethercat /etc/init.d/ethercat\n$ sudo mkdir -p /etc/sysconfig\n$ sudo cp /usr/local/etherlab/etc/sysconfig/ethercat /etc/sysconfig/ethercat\n"})}),"\n",(0,r.jsxs)(n.admonition,{type:"tip",children:[(0,r.jsx)(n.p,{children:"These 4 steps may be needed every time the Linux kernel is updated. Before re-doing the 4 steps, you can try the following lighter steps:"}),(0,r.jsxs)(n.p,{children:["Go into the folder where the EtherCAT project was cloned, from ",(0,r.jsx)(n.strong,{children:"Step 2 (Setup sources)"}),", do:"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cd ethercat\nsudo rm /usr/bin/ethercat /etc/init.d/ethercat\n./bootstrap\n"})}),(0,r.jsx)(n.p,{children:"Then complete Step 3 (Configure, build and install\u2026) entirely. From Step 4 (Configure system), run:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo ln -s /usr/local/etherlab/bin/ethercat /usr/bin/\nsudo ln -s /usr/local/etherlab/etc/init.d/ethercat /etc/init.d/ethercat\n"})})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Create a new ",(0,r.jsx)(n.code,{children:"udev"})," rule:"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo gedit /etc/udev/rules.d/99-EtherCAT.rules\n"})}),"\n",(0,r.jsx)(n.p,{children:"containing:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'KERNEL=="EtherCAT[0-9]*", MODE="0666"\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Configure the network adapter for EtherCAT:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo gedit /etc/sysconfig/ethercat\n"})}),"\n",(0,r.jsx)(n.p,{children:"In the configuration file specify the mac address of the network card to be used and its driver"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'MASTER0_DEVICE="ff:ff:ff:ff:ff:ff"  # mac address\nDEVICE_MODULES="generic"\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Now you can start the EtherCAT master:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo /etc/init.d/ethercat start\n"})}),"\n",(0,r.jsx)(n.p,{children:"it should print"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"Starting EtherCAT master 1.5.3  done\n"})}),"\n",(0,r.jsx)(n.p,{children:"You can check connected slaves:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"ethercat slaves\n"})}),"\n",(0,r.jsx)(n.p,{children:"It should print information of connected slave device:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"$ <id>  <alias>:<position>  <device_state>  +  <device_name>\n"})}),"\n",(0,r.jsx)(n.p,{children:"Example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"0  0:0  PREOP  +  <device_0_name>\n0  0:1  PREOP  +  <device_1_name>\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"building-ethercat_driver_ros2",children:["Building ",(0,r.jsx)(n.code,{children:"ethercat_driver_ros2"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Install ROS2 packages. The current development is based of ",(0,r.jsx)(n.code,{children:"ros2 humble"}),". Installation steps are described in the ",(0,r.jsx)(n.a,{href:"https://docs.ros.org/en/humble/Installation.html",children:"ROS2 Humble Documentation"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:"Source your ROS2` environment:"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"source /opt/ros/humble/setup.bash\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"The ROS2 environment needs to be sources in every used terminal.\nIf only one distribution of ROS2 is used, it can be added to the ~/.bashrc file."})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:"Install colcon and its extensions :"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo apt install python3-colcon-common-extensions\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.ol,{start:"4",children:["\n",(0,r.jsx)(n.li,{children:"Create a new ROS2 workspace:"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"mkdir ~/ros2_ws/src\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.ol,{start:"5",children:["\n",(0,r.jsx)(n.li,{children:"Pull relevant packages, install dependencies, compile, and source the workspace by using:"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cd ~/ros2_ws\ngit clone https://github.com/ICube-Robotics/ethercat_driver_ros2.git src/ethercat_driver_ros2\nrosdep install --ignore-src --from-paths . -y -r\ncolcon build --cmake-args -DCMAKE_BUILD_TYPE=Release --symlink-install\nsource install/setup.bash\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var r=s(6540);const i={},t=r.createContext(i);function l(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);